# Generated by Django 2.1.5 on 2021-07-20 09:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0042_remove_exampreviousyearspapers_subject'),
        ('content', '0059_auto_20210719_1837'),
    ]

    operations = [
        migrations.CreateModel(
            name='MentorPaperAnswerPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Date and Time of the qp')),
                ('paper_complete', models.BooleanField(default=False)),
                ('attempt_order', models.IntegerField(default=0, verbose_name='Number of Attempt paper')),
                ('score', models.IntegerField(default=0)),
                ('marks', models.IntegerField(default=0)),
                ('pause_count', models.IntegerField(default=0)),
                ('remaining_time', models.IntegerField(blank=True, default=0, null=True)),
                ('paper_type', models.CharField(choices=[('practice', 'Practice'), ('paper', 'Paper')], max_length=24)),
                ('percentage', models.IntegerField(default=0, verbose_name='Total Percentage')),
                ('time_taken', models.IntegerField(default=0, verbose_name='Number of minutes to finish paper')),
                ('total_time', models.IntegerField(default=0)),
                ('total_questions', models.IntegerField(default=0)),
                ('attempted', models.IntegerField(default=0)),
                ('correct', models.IntegerField(default=0)),
                ('incorrect', models.IntegerField(default=0)),
                ('attempted_date', models.DateField(blank=True, null=True)),
                ('question_order', models.TextField(blank=True, default='')),
                ('bookmarks', models.ManyToManyField(blank=True, null=True, related_name='user_bookmarks', to='content.LearnerBookmarks')),
            ],
        ),
        migrations.CreateModel(
            name='MentorPapers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('score', models.IntegerField(default=0)),
                ('marks', models.IntegerField(default=0)),
                ('total_time', models.IntegerField(default=0)),
                ('time_taken', models.IntegerField(default=0)),
                ('paper_count', models.IntegerField(default=0)),
                ('paper_type', models.CharField(choices=[('practice', 'Practice'), ('paper', 'Paper')], max_length=24)),
                ('show_time', models.BooleanField(default=True)),
                ('submitted', models.BooleanField(default=False)),
                ('exam_start_date_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Date and Time of the Exam')),
                ('exam_end_date_time', models.DateTimeField(blank=True, null=True, verbose_name='End Date and Time of the Exam')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='batch',
            name='papers',
        ),
        migrations.AddField(
            model_name='mentorpapers',
            name='batch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.Batch'),
        ),
        migrations.AddField(
            model_name='mentorpapers',
            name='exam',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.Exam'),
        ),
        migrations.AddField(
            model_name='mentorpapers',
            name='mentor',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='mentorpapers',
            name='questions',
            field=models.ManyToManyField(blank=True, null=True, to='content.Question'),
        ),
        migrations.AddField(
            model_name='mentorpapers',
            name='subjects',
            field=models.ManyToManyField(blank=True, null=True, to='courses.Subject'),
        ),
        migrations.AddField(
            model_name='mentorpaperanswerpaper',
            name='mentor_paper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.MentorPapers'),
        ),
        migrations.AddField(
            model_name='mentorpaperanswerpaper',
            name='question_answered',
            field=models.ManyToManyField(blank=True, related_name='paper_question_answered', to='content.Question'),
        ),
        migrations.AddField(
            model_name='mentorpaperanswerpaper',
            name='question_markforreview',
            field=models.ManyToManyField(blank=True, related_name='paper_question_markforreview', to='content.Question'),
        ),
        migrations.AddField(
            model_name='mentorpaperanswerpaper',
            name='question_save_markforreview',
            field=models.ManyToManyField(blank=True, related_name='paper_question_save_markforreview', to='content.Question'),
        ),
        migrations.AddField(
            model_name='mentorpaperanswerpaper',
            name='question_unanswered',
            field=models.ManyToManyField(blank=True, related_name='paper_question_unanswered', to='content.Question'),
        ),
        migrations.AddField(
            model_name='mentorpaperanswerpaper',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
