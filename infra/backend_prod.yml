AWSTemplateFormatVersion: '2010-09-09'
Description: container on ecs cluster

Parameters:

  Prefix:
    Type: String
    Default: 'mmpprod'
  
  ClusterName:
    Type: String
    Default: 'mmpprodcluster'

  SSLArn:
    Type: String
    Default: 'arn:aws:acm:ap-south-1:721772295061:certificate/3c87bc71-9c94-430e-b207-e2ea3eda644a'
 
    
Resources:
  
  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: mmpprod-backend
      Cpu: 1024
      Memory: 2048
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue mmp-ECSTaskExecutionRole
      TaskRoleArn: !ImportValue mmp-AmazonECSTASKRole
      ContainerDefinitions:
        - Name: mmpprodbackend
          Image: 721772295061.dkr.ecr.ap-south-1.amazonaws.com/mmpprodbackend:b7d850d
          Cpu: 1024
          Memory: 2048
          PortMappings:
            - ContainerPort: 8000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ClusterName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'backend'

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      ServiceName: mmpprod-backend-service
      TaskDefinition: !Ref Task
      Cluster: !ImportValue 'mmpprod-ECSCluster'
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue mmp-Subnet1
            - !ImportValue mmp-Subnet2
          SecurityGroups:
            - !ImportValue mmpprod-ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: mmpprodbackend
          ContainerPort: 8000
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: mmpprod-backend-tg
      VpcId: !ImportValue mmp-vpc
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip

  LoadBalancerListenerHttps:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - TargetGroup
    Properties:
      LoadBalancerArn: !ImportValue mmpprod-LoadBalancer
      Port: 443
      Protocol: 'HTTPS'
      Certificates:
        - CertificateArn: !Ref SSLArn
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListenerHttps
      Priority: 2
      Conditions:
        - Field: host-header
          Values:
            - 'backendprod.makemypath.app'
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward

  ScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    DependsOn: Service
    Properties:
      RoleARN: !ImportValue mmp-AmazonECSAutoScalingRole
      ResourceId: !Join
        - "/"
        - [service, !ImportValue mmpprod-ECSCluster, !GetAtt [Service, Name]]
      ServiceNamespace: ecs
      ScalableDimension: ecs:service:DesiredCount
      MinCapacity: 1
      MaxCapacity: 5

  ScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: "AmazonECSTaskExecutionRolePolicy"
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 50